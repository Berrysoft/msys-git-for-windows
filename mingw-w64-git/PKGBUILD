
_realname=git
pkgbase="mingw-w64-${_realname}"
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=2.51.0.windows.1
pkgrel=1
pkgdesc="The fast distributed version control system (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32' 'clangarm64')
url="https://git-for-windows.github.io/"
license=('GPL2')


makedepends=("docbook-xsl"
             "xmlto"
             "${MINGW_PACKAGE_PREFIX}-asciidoc"
             "${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-gettext-tools"
             "${MINGW_PACKAGE_PREFIX}-meson"
             "${MINGW_PACKAGE_PREFIX}-pkgconf"
             "${MINGW_PACKAGE_PREFIX}-tk")

depends=("${MINGW_PACKAGE_PREFIX}-ca-certificates"
         "${MINGW_PACKAGE_PREFIX}-curl"
         "${MINGW_PACKAGE_PREFIX}-expat>=2.0"
         "${MINGW_PACKAGE_PREFIX}-gettext-runtime"
         "${MINGW_PACKAGE_PREFIX}-libiconv"
         "${MINGW_PACKAGE_PREFIX}-openssl"
         "${MINGW_PACKAGE_PREFIX}-pcre2"
         "${MINGW_PACKAGE_PREFIX}-zlib"
         "perl>=5.14.0"
         "perl-Authen-SASL"
         "perl-Error"
         "perl-libwww"
         "perl-MIME-tools"
         "perl-Net-SMTP-SSL"
         "perl-TermReadKey")

optdepends=("subversion: git-svn"
            "${MINGW_PACKAGE_PREFIX}-python: git-p4"
            "${MINGW_PACKAGE_PREFIX}-tk: gitk & git-gui")

# These packages are provided by git-sdk by git-for-windows project.
replaces=("${MINGW_PACKAGE_PREFIX}-${_realname}-doc-html"
          "${MINGW_PACKAGE_PREFIX}-${_realname}-doc-man")

source=("https://github.com/git-for-windows/git/archive/refs/tags/v$pkgver.tar.gz"
        "0007-use-env-as-interpreter.patch"
        "0013-fix-meson-symlink.patch"
        "0014-shell-path.patch"
        "0015-xmlto.patch"
        "0016-link-whole.patch"
        "0102-arm-remove-nedmalloc.patch")

sha256sums=('1e389ecc31462e2d1faf37f6a50ec583797dfc212f5b5c7f4779c57b7f92679c'
            '82ad932bb1f8da53cf64bcad9205a1d8ca681b177e3b49ef072e3625353bfc38'
            'b17b93efd82d3c15b935ff90699dc193fc12795fc4781302a99e857117c8ce03'
            '9d3d551be850d7df05e9b07c8f713e170d2d7b02533cab5f8b4026e721979b25'
            'a32601a63ed73465aa5bbe43543e3bc374096042e5e8fa7e1f7a4f06dee19369'
            '7e4419dde8ebb69a5459b7d8cec5c88ccfccc11b9df3b219c7c7e0bb0f607058'
            '84a5887a8887d16ef451357f7c3295c5366cf58f30f0104ea81cb3e850c3675f')

prepare() {
    cd "$srcdir/$_realname-$pkgver"
    patch -Np1 -i $srcdir/0007-use-env-as-interpreter.patch
    patch -Np1 -i $srcdir/0013-fix-meson-symlink.patch
    patch -Np1 -i $srcdir/0014-shell-path.patch
    patch -Np1 -i $srcdir/0015-xmlto.patch
    if [[ "$MSYSTEM" == CLANG* ]];
    then
        patch -Np1 -i $srcdir/0016-link-whole.patch
    fi
    if test "CLANGARM64" == "$MSYSTEM"
    then
        patch -Np1 -i $srcdir/0102-arm-remove-nedmalloc.patch
    fi
    echo "v$pkgver-Berrysoft-$pkgrel" > version
}

build() {
    # Git wants to decide itself whether to use ANSI stdio emulation or not
    CFLAGS="$(echo "$CFLAGS" |
        sed 's/-Wp,-D__USE_MINGW_ANSI_STDIO\(=[0-9]*\)\?//')"
    CPPFLAGS="$(echo "$CPPFLAGS" |
        sed 's/-Wp,-D__USE_MINGW_ANSI_STDIO\(=[0-9]*\)\?//')"
    CXXFLAGS="$(echo "$CXXFLAGS" |
        sed 's/-Wp,-D__USE_MINGW_ANSI_STDIO\(=[0-9]*\)\?//')"

    mkdir -p $srcdir/build-${MSYSTEM}

    cd "$srcdir/$_realname-$pkgver"
    MSYS2_ARG_CONV_EXCL="--prefix=" \
        ${MINGW_PREFIX}/bin/meson setup \
        --prefix="$MINGW_PREFIX" \
        --buildtype=release \
        $srcdir/build-${MSYSTEM} \
        -Druntime_prefix=true \
        -Dgitconfig='../etc/gitconfig' \
        -Dgitattributes='../etc/gitattributes' \
        -Dcredential_helpers=wincred \
        -Dgettext=enabled \
        -Dgitweb=enabled \
        -Diconv=enabled \
        -Dperl=enabled \
        -Dpython=enabled \
        -Dtests=false \
        -Ddefault_editor=vim \
        -Ddefault_help_format=html
        # don't make docs with meson to keep compatible with legacy components
        # "-Ddocs=['man', 'html']"
    ${MINGW_PREFIX}/bin/meson compile -C $srcdir/build-${MSYSTEM}
}

package () {
    cd "$srcdir/$_realname-$pkgver"
    DESTDIR="${pkgdir}" ${MINGW_PREFIX}/bin/meson install -C $srcdir/build-${MSYSTEM}

    # gitk
    make -C gitk-git prefix="$pkgdir/$MINGW_PREFIX" install

    # git-gui
    DESTDIR="$pkgdir" make -C git-gui gitexecdir="$MINGW_PREFIX/libexec/git-core" install

    # docs
    DESTDIR="$pkgdir" make prefix="$MINGW_PREFIX" install-html
    DESTDIR="$pkgdir" make prefix="$MINGW_PREFIX" install-man

    # subtree, for backwards-compatibility with MSys2's Git package
    DESTDIR="$pkgdir" make -C contrib/subtree prefix="$MINGW_PREFIX" install
    DESTDIR="$pkgdir" make -C contrib/subtree prefix="$MINGW_PREFIX" install-doc

    # contacts
    DESTDIR="$pkgdir" make -C contrib/contacts prefix="$MINGW_PREFIX" install
    DESTDIR="$pkgdir" make -C contrib/contacts prefix="$MINGW_PREFIX" install-doc

    # jump
    install contrib/git-jump/git-jump "$pkgdir/$MINGW_PREFIX/libexec/git-core/"

    # mw
    DESTDIR="$pkgdir" make -C contrib/mw-to-git prefix="$MINGW_PREFIX" perllibdir="$MINGW_PREFIX/share/perl5" install

    # completions
    install -d "$pkgdir/$MINGW_PREFIX/share/git/completion/"
    install contrib/completion/* "$pkgdir/$MINGW_PREFIX/share/git/completion/"
}
