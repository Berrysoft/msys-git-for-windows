
_realname=git
pkgbase="mingw-w64-${_realname}"
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=2.48.1.windows.1
pkgrel=1
pkgdesc="The fast distributed version control system (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'mingw64' 'ucrt64' 'clang64' 'clang32' 'clangarm64')
url="https://git-for-windows.github.io/"
license=('GPL2')


makedepends=("docbook-xsl"
             "xmlto"
             "${MINGW_PACKAGE_PREFIX}-asciidoc"
             "${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-pkgconf"
             "${MINGW_PACKAGE_PREFIX}-tk")

depends=("${MINGW_PACKAGE_PREFIX}-ca-certificates"
         "${MINGW_PACKAGE_PREFIX}-curl"
         "${MINGW_PACKAGE_PREFIX}-expat>=2.0"
         "${MINGW_PACKAGE_PREFIX}-gettext"
         "${MINGW_PACKAGE_PREFIX}-libiconv"
         "${MINGW_PACKAGE_PREFIX}-openssl"
         "${MINGW_PACKAGE_PREFIX}-pcre2"
         "${MINGW_PACKAGE_PREFIX}-zlib"
         "perl>=5.14.0"
         "perl-Authen-SASL"
         "perl-Error"
         "perl-libwww"
         "perl-MIME-tools"
         "perl-Net-SMTP-SSL"
         "perl-TermReadKey")

optdepends=("subversion: git-svn"
            "python: git-p4"
            "${MINGW_PACKAGE_PREFIX}-tk: gitk & git-gui")

# These packages are provided by git-sdk by git-for-windows project.
replaces=("${MINGW_PACKAGE_PREFIX}-${_realname}-doc-html"
          "${MINGW_PACKAGE_PREFIX}-${_realname}-doc-man")

source=("https://github.com/git-for-windows/git/archive/refs/tags/v$pkgver.tar.gz"
        "0001-fix-create-link-destdir.patch"
        "0002-fix-build-with-mingw32-and-clang.patch"
        "0007-use-env-as-interpreter.patch"
        "0009-curl-lib.patch"
        "0012-fix-install-scripts.patch")

sha256sums=('a304618ee1cae33d5f0d9539d70a1cf2231a1585cfd93951beb57fae30905197'
            '5119b9b816a8fc0de5f677bc1aa69b92fe11ecb4ecd4e65b7583aff727cb4222'
            'c2bd87824dbd697200630ecb12bdc200435a9fd87b424a3ddd1b784b6a843d8f'
            '82ad932bb1f8da53cf64bcad9205a1d8ca681b177e3b49ef072e3625353bfc38'
            'baebfc70dd433760bc71c156a895f2702c77221509bb6d6acc1dd978afc32aec'
            '263f2527aabc1a8b3ed0c5aef3b2843dc22a58f01f822ef5857de825e34d9e55')

prepare() {
    cd "$srcdir/$_realname-$pkgver"
    patch -Np1 -i $srcdir/0001-fix-create-link-destdir.patch
    patch -Np1 -i $srcdir/0002-fix-build-with-mingw32-and-clang.patch
    patch -Np1 -i $srcdir/0007-use-env-as-interpreter.patch
    patch -Np1 -i $srcdir/0009-curl-lib.patch
    patch -Np1 -i $srcdir/0012-fix-install-scripts.patch
    echo "v$pkgver-$pkgrel" > version
}

build() {
    # Git wants to decide itself whether to use ANSI stdio emulation or not
    CFLAGS="$(echo "$CFLAGS" |
        sed 's/-Wp,-D__USE_MINGW_ANSI_STDIO\(=[0-9]*\)\?//')"
    CPPFLAGS="$(echo "$CPPFLAGS" |
        sed 's/-Wp,-D__USE_MINGW_ANSI_STDIO\(=[0-9]*\)\?//')"
    CXXFLAGS="$(echo "$CXXFLAGS" |
        sed 's/-Wp,-D__USE_MINGW_ANSI_STDIO\(=[0-9]*\)\?//')"

    # run cmake first, it will generate GIT-VERSION-FILE
    mkdir -p $srcdir/build-${MSYSTEM}
    cd $srcdir/build-${MSYSTEM}
    MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=;-DFALLBACK_RUNTIME_PREFIX=" \
        ${MINGW_PREFIX}/bin/cmake.exe \
        $srcdir/$_realname-$pkgver/contrib/buildsystems \
        -GNinja \
        -DUSE_VCPKG=off \
        -DSKIP_DASHED_BUILT_INS=ON \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX="$MINGW_PREFIX" \
        -DFALLBACK_RUNTIME_PREFIX="$MINGW_PREFIX"
    ${MINGW_PREFIX}/bin/cmake --build .
}

package () {
    cd $srcdir/build-${MSYSTEM}
    DESTDIR="${pkgdir}" ${MINGW_PREFIX}/bin/cmake --install .

    cd "$srcdir/$_realname-$pkgver"

    # gitk
    make -C gitk-git prefix="$pkgdir/$MINGW_PREFIX" install

    # git-gui
    DESTDIR="$pkgdir" make -C git-gui gitexecdir="$MINGW_PREFIX/libexec/git-core" install

    # gitweb
    DESTDIR="$pkgdir" make prefix="$MINGW_PREFIX" gitwebdir="$MINGW_PREFIX/var/www/cgi-bin" install-gitweb

    # docs
    DESTDIR="$pkgdir" make prefix="$MINGW_PREFIX" install-html
    DESTDIR="$pkgdir" make prefix="$MINGW_PREFIX" install-man

    # subtree, for backwards-compatibility with MSys2's Git package
    DESTDIR="$pkgdir" make -C contrib/subtree prefix="$MINGW_PREFIX" install
    DESTDIR="$pkgdir" make -C contrib/subtree prefix="$MINGW_PREFIX" install-doc

    # contacts
    DESTDIR="$pkgdir" make -C contrib/contacts prefix="$MINGW_PREFIX" install
    DESTDIR="$pkgdir" make -C contrib/contacts prefix="$MINGW_PREFIX" install-doc

    # jump
    install contrib/git-jump/git-jump "$pkgdir/$MINGW_PREFIX/libexec/git-core/"

    # resurrect
    install contrib/git-resurrect.sh "$pkgdir/$MINGW_PREFIX/libexec/git-core/git-resurrect"

    # mw
    DESTDIR="$pkgdir" make -C contrib/mw-to-git prefix="$MINGW_PREFIX" perllibdir="$MINGW_PREFIX/share/perl5" install

    # git-credential-wincred.exe
    make -C contrib/credential/wincred prefix="$pkgdir/$MINGW_PREFIX" install

    # completions
    install -d "$pkgdir/$MINGW_PREFIX/share/git/completion/"
    install contrib/completion/* "$pkgdir/$MINGW_PREFIX/share/git/completion/"
}
