
_realname=git
pkgbase="mingw-w64-${_realname}"
pkgname=("${MINGW_PACKAGE_PREFIX}-${_realname}")
pkgver=2.39.1.windows.1
# pkgrel should be larger than the official one
pkgrel=2
pkgdesc="The fast distributed version control system (mingw-w64)"
arch=('any')
url="https://git-for-windows.github.io/"
license=('GPL2')
groups=('VCS')

options=('strip')

makedepends=("diffutils"
             "docbook-xsl"
             "git"
             "make"
             "tar"
             "xmlto"
             "${MINGW_PACKAGE_PREFIX}-asciidoc"
             "${MINGW_PACKAGE_PREFIX}-cc"
             "${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-ninja"
             "${MINGW_PACKAGE_PREFIX}-pkgconf"
             "${MINGW_PACKAGE_PREFIX}-tk")

depends=("${MINGW_PACKAGE_PREFIX}-ca-certificates"
         "${MINGW_PACKAGE_PREFIX}-curl"
         "${MINGW_PACKAGE_PREFIX}-expat>=2.0"
         "${MINGW_PACKAGE_PREFIX}-gettext"
         "${MINGW_PACKAGE_PREFIX}-libiconv"
         "${MINGW_PACKAGE_PREFIX}-openssl"
         "${MINGW_PACKAGE_PREFIX}-pcre2"
         "${MINGW_PACKAGE_PREFIX}-zlib"
         "perl>=5.14.0"
         "perl-Authen-SASL"
         "perl-Error"
         "perl-libwww"
         "perl-MIME-tools"
         "perl-Net-SMTP-SSL"
         "perl-TermReadKey")

optdepends=("subversion: git-svn"
            "${MINGW_PACKAGE_PREFIX}-python: git-p4"
            "${MINGW_PACKAGE_PREFIX}-tk: gitk & git-gui")

conflicts=("${MINGW_PACKAGE_PREFIX}-${_realname}-doc-html"
	       "${MINGW_PACKAGE_PREFIX}-${_realname}-doc-man")

source=("git"::"git+https://github.com/git-for-windows/git.git#tag=v$pkgver")

patches=("1-mingw.patch"
         "2-version.patch"
         "4-headless.patch"
         "6-interpr.patch")
source+=(${patches[@]})

sha256sums=('SKIP'
            '94a2ee925a17130fd0c1debd5c72dff8f8f1dfd22612b456fdd45ae5d0e1b215'
            'c7fe26ea8d51918506d3adfa0a21aedc322f3c04e933cd31e0eb40a2f899d022'
            'd08164a391d63cdad3932818538bd20e465baa85b1a0d1a0bb383bb4963d94e4'
            'cc582f4526aa57c64436cca5d8ab583837213c03408a1cc32ea4795577f575ce')

prepare() {
    cd "$srcdir/git"
    if test false != "$(git config core.autocrlf)"
    then
        git config core.autocrlf false
        rm .git/index
        git reset --hard
    fi
    for p in ${patches[@]}
    do
        git apply -v ${srcdir}/$p
    done
    echo "v$pkgver.Berrysoft.$pkgrel" > version
}

package () {
    # Git wants to decide itself whether to use ANSI stdio emulation or not
    CPPFLAGS="$(echo "$CPPFLAGS" |
        sed 's/-D__USE_MINGW_ANSI_STDIO\(=[0-9]*\)\?//')"

    cd "$srcdir"/git

    GIT_BUILT_FROM_COMMIT="$(git rev-parse -q --verify HEAD 2>/dev/null)"

    # run cmake first, it will generate GIT-VERSION-FILE
    [ -d ${srcdir}/build ] || mkdir ${srcdir}/build
    cd ${srcdir}/build
    MSYS2_ARG_CONV_EXCL="-DFALLBACK_RUNTIME_PREFIX=" ${MINGW_PREFIX}/bin/cmake.exe ${srcdir}/git/contrib/buildsystems \
        -GNinja \
        -DUSE_VCPKG=off \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX="$pkgdir/$MINGW_PREFIX" \
        -DFALLBACK_RUNTIME_PREFIX="$MINGW_PREFIX" \
        -DGIT_BUILT_FROM_COMMIT="$GIT_BUILT_FROM_COMMIT"
    ${MINGW_PREFIX}/bin/ninja.exe install

    cd "$srcdir"/git

    # gitk
    make -C gitk-git prefix="$pkgdir/$MINGW_PREFIX" install

    # git-gui
    DESTDIR="$pkgdir" make -C git-gui gitexecdir="$MINGW_PREFIX/libexec/git-core" install

    # gitweb
    DESTDIR="$pkgdir" make prefix="$MINGW_PREFIX" gitwebdir="$MINGW_PREFIX/var/www/cgi-bin" install-gitweb

    # docs
    DESTDIR="$pkgdir" make prefix="$MINGW_PREFIX" install-html
    DESTDIR="$pkgdir" make prefix="$MINGW_PREFIX" install-man

    # subtree, for backwards-compatibility with MSys2's Git package
    DESTDIR="$pkgdir" make -C contrib/subtree prefix="$MINGW_PREFIX" install
    DESTDIR="$pkgdir" make -C contrib/subtree prefix="$MINGW_PREFIX" install-doc

    # contacts
    DESTDIR="$pkgdir" make -C contrib/contacts prefix="$MINGW_PREFIX" install
    DESTDIR="$pkgdir" make -C contrib/contacts prefix="$MINGW_PREFIX" install-doc

    # jump
    install contrib/git-jump/git-jump "$pkgdir/$MINGW_PREFIX/libexec/git-core/"

    # resurrect
    install contrib/git-resurrect.sh "$pkgdir/$MINGW_PREFIX/libexec/git-core/git-resurrect"

    # mw
    DESTDIR="$pkgdir" make -C contrib/mw-to-git prefix="$MINGW_PREFIX" perllibdir="$MINGW_PREFIX/share/perl5" install

    # git-credential-wincred.exe
    make -C contrib/credential/wincred prefix="$pkgdir/$MINGW_PREFIX" install

    # completions
    install -d "$pkgdir/$MINGW_PREFIX/share/git/completion/"
    install contrib/completion/* "$pkgdir/$MINGW_PREFIX/share/git/completion/"
}
