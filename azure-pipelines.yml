# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - master
  paths:
    exclude:
      - LICENSE
      - README.md

parameters:
- name: packages
  type: object
  default:
  - git
  - git-cal
  - git-credential-manager
  - git-crypt
  - git-extras
  - git-filter-repo
  - git-fire
  - git-flow
  - git-lfs
  - git-recall
  - git-sizer
- name: packages_rust
  type: object
  default:
  - git-delta
  - git-smash
  - git-warp-time

jobs:
- job: Package
  timeoutInMinutes: 0
  strategy:
    matrix:
      MINGW32:
        target: 'i686'
        prefix: 'mingw32'
        MSYSTEM: 'MINGW32'
      MINGW64:
        target: 'x86_64'
        prefix: 'mingw64'
        MSYSTEM: 'MINGW64'
      UCRT64:
        target: 'ucrt-x86_64'
        prefix: 'ucrt64'
        MSYSTEM: 'UCRT64'
      CLANG32:
        target: 'clang-i686'
        prefix: 'clang32'
        MSYSTEM: 'CLANG32'
      CLANG64:
        target: 'clang-x86_64'
        prefix: 'clang64'
        MSYSTEM: 'CLANG64'
  pool:
    vmImage: 'windows-latest'

  steps:
  - pwsh: |
      git config core.autocrlf false
      rm .git/index
      git reset --hard
    displayName: "Fix CRLF"

  - pwsh: |
      $env:PATH="$env:PATH;C:\msys64\$(prefix)\bin;C:\msys64\usr\bin;"
      C:\msys64\usr\bin\pacman.exe -Syu --noconfirm
      C:\msys64\usr\bin\pacman.exe -S --noconfirm mingw-w64-$(target)-binutils
    displayName: "Install pre-package dependencies"

  - ${{ each p in parameters.packages }}:
    - pwsh: |
        $env:PATH="$env:PATH;C:\msys64\$(prefix)\bin;C:\msys64\usr\bin;"
        cd mingw-w64-${{ p }}
        C:\msys64\usr\bin\bash.exe -c "makepkg-mingw -s --noconfirm"
      displayName: "Package ${{ p }}"
      env:
        MSYSTEM: $(MSYSTEM)

  - ${{ each p in parameters.packages_rust }}:
    - pwsh: |
        $env:PATH="$env:PATH;C:\msys64\$(prefix)\bin;C:\msys64\usr\bin;"
        cd mingw-w64-${{ p }}
        C:\msys64\usr\bin\bash.exe -c "makepkg-mingw -s --noconfirm --nocheck"
      condition: and(succeeded(), and(ne(variables.MSYSTEM, 'CLANG32'), ne(variables.MSYSTEM, 'CLANG64')))
      displayName: "Package ${{ p }}"
      env:
        MSYSTEM: $(MSYSTEM)

  - task: CopyFiles@2
    inputs:
      contents: '**/*.pkg.tar.*' 
      targetFolder: $(build.artifactstagingdirectory)
      flattenFolders: true
      preserveTimestamp: true
    displayName: "Copy packages"

  - task: PublishBuildArtifacts@1
    inputs:
      ArtifactName: 'g4w'

- job: RepoAdd
  dependsOn: Package
  pool:
    vmImage: 'windows-latest'

  steps:
  - task: DownloadPipelineArtifact@2
    inputs:
      artifact: 'g4w'
      path: $(Build.SourcesDirectory)/repo
    displayName: "Download packages"

  - pwsh: |
      $env:PATH="$env:PATH;C:\msys64\usr\bin;"
      cd repo
      C:\msys64\usr\bin\bash.exe -c "repo-add g4w.db.tar.gz *"
    displayName: "Run repo-add"

  - task: CopyFiles@2
    inputs:
      contents: 'repo/g4w*' 
      targetFolder: $(build.artifactstagingdirectory)
      flattenFolders: true
      preserveTimestamp: true
    displayName: "Copy repo"

  - task: PublishBuildArtifacts@1
    inputs:
      ArtifactName: 'g4w'
